name: Security Scan Schedule

on:
  workflow_dispatch: ~
  schedule:
    - cron: '0 0 1 * *'

jobs:
#  security-audit:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Install Rust
#        uses: dtolnay/rust-toolchain@stable
#
#      - name: Install security tools
#        run: |
#          cargo install cargo-audit
#          cargo install cargo-deny
#          cargo install cargo-geiger
#
#      - name: Run cargo audit
#        run: cargo audit
#
#      - name: Run cargo deny check
#        run: |
#          cargo deny init
#          cargo deny check
#
#      - name: Check for unsafe Rust
#        run: cargo geiger
#
#      - name: Run Clippy with security lints
#        run: |
#          rustup component add clippy
#          cargo clippy -- -W clippy::all -W clippy::correctness -W clippy::suspicious -W clippy::complexity -W clippy::perf -D warnings

  zap-scan:
    runs-on: ubuntu-22.04
    name: "Security"
    strategy:
      matrix:
        db:
          - engine: "sqlite"
            url: "sqlite://test.db"
          - engine: "mysql"
            url: "mysql://root:toor@mysql:3306/auth_service_test"
            service: "mysql:8.4"
        rabbitmq:
          - version: "4"
    services:
      mysql:
        image: ${{ (matrix.db.service) && matrix.db.service || '' }}
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: toor
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -ptoor"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=40s
      rabbit:
        image: rabbitmq:4-management
        ports:
          - 5672:5672
        options: >-
          --health-cmd="rabbitmq-diagnostics check_port_connectivity"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=5
          --health-start-period=90s
      app:
        image: ghcr.io/rocketarminek/auth-api-rust:test-latest
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080
        env:
          DATABASE_ENGINE: ${{ matrix.db.engine }}
          DATABASE_URL: ${{ matrix.db.url }}
          PASSWORD_HASHING_SCHEME: bcrypt_low
          SECRET: secret
          RABBITMQ_URL: amqp://rabbit:5672
          VERIFICATION_REQUIRED: false
          EVENT_DRIVEN: true
        options: >-
          --health-cmd="app health-check"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=30s
    steps:
      - uses: actions/checkout@v4
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: true
          artifact_name: zap-scan-${{ matrix.db.engine }}-${{ github.run_id }}-monthly
