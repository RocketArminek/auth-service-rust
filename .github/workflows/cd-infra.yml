#name: Rust auth api infra changes
#
#on:
#  workflow_dispatch: ~
#  push:
#    paths:
#      - ".ops/**"
#    branches:
#      - "main"
#
#env:
#  REGISTRY: ghcr.io
#  IMAGE_NAME: rocketarminek/auth-api-rust

#jobs:
#  plan:
#    runs-on: ubuntu-20.04
#    name: "Validate & plan cluster changes"
#    steps:
#      - uses: actions/checkout@v3
#      - uses: hashicorp/setup-terraform@v2
#        with:
#          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
#      - run: |
#          mkdir ${HOME}/.kube
#          echo ${{ secrets.KUBE_CONFIG_OBRZEZNA_1 }} | base64 --decode > ${HOME}/.kube/config
#          cd .ops/terraform
#          terraform init
#          terraform validate
#          terraform plan -var="app_docker_image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" -lock=false
#
#  terraform-apply:
#    runs-on: ubuntu-latest
#    name: "Deploy"
#    needs: [ "plan" ]
#    steps:
#      - uses: actions/checkout@v3
#      - uses: hashicorp/setup-terraform@v2
#        with:
#          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
#      - run: |
#          mkdir ${HOME}/.kube
#          echo ${{ secrets.KUBE_CONFIG_OBRZEZNA_1 }} | base64 --decode > ${HOME}/.kube/config
#          cd .ops/terraform
#          terraform init
#          terraform apply -auto-approve -var="app_docker_image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" -var="aws_access_key=${{secrets.AWS_ACCESS_KEY_4E}}" -var="aws_secret_access_key=${{secrets.AWS_SECRET_ACCESS_KEY_4E}}" -lock-timeout=10m
