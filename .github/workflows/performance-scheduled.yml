name: Performance Tests Schedule

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  performance-test:
    runs-on: ubuntu-22.04
    name: "p"
    timeout-minutes: 10
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        scenario:
          - "tests/performance/scenarios/auth_flow.js"
          - "tests/performance/scenarios/admin.js"
          - "tests/performance/scenarios/spike.js"
        db:
          - engine: "sqlite"
            url: "sqlite://test.db"
          - engine: "mysql"
            url: "mysql://root:toor@mysql:3306/auth_service_test"
            service: "mysql:8.4"
        rabbitmq:
          - version: "4"
    services:
      mysql:
        image: ${{ (matrix.db.service) && matrix.db.service || '' }}
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: toor
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -ptoor"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=40s
      rabbit:
        image: rabbitmq:${{matrix.rabbitmq.version}}-management
        ports:
          - 5672:5672
        options: >-
          --health-cmd="rabbitmq-diagnostics check_port_connectivity"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=5
          --health-start-period=90s
      app:
        image: ghcr.io/rocketarminek/auth-api-rust:test-latest
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        ports:
          - 8080:8080
        env:
          DATABASE_ENGINE: ${{ matrix.db.engine }}
          DATABASE_URL: ${{ matrix.db.url }}
          PASSWORD_HASHING_SCHEME: bcrypt_low
          SECRET: secret
          RABBITMQ_URL: amqp://rabbit:5672
          VERIFICATION_REQUIRED: false
          EVENT_DRIVEN: true
        options: >-
          --health-cmd="app health-check"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          --health-start-period=30s
    steps:
      - uses: actions/checkout@v4
      - uses: grafana/setup-k6-action@v1
      - name: Login to cloud
        run: k6 login cloud -t ${{ secrets.K6_CLOUD }}
      - name: Run k6 test scenario
        run: k6 run ${{ matrix.scenario }} --throw --quiet --tag db=${{ matrix.db.engine }} --out cloud
